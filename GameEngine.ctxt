#BlueJ class context
comment0.target=GameEngine
comment0.text=\r\n\ \ This\ class\ is\ part\ of\ the\ "The\ Lost\ City"\ application.\r\n\ \ "The\ Lost\ City"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\r\n\r\n\ \ This\ class\ creates\ all\ rooms,\ creates\ the\ parser\ and\ starts\r\n\ \ the\ game.\ \ It\ also\ evaluates\ and\ executes\ the\ commands\ that\r\n\ \ the\ parser\ returns.\r\n\r\n\ @author\ \ Michael\ Kolling\ and\ David\ J.\ Barnes\ +\ E.\ Leblanc\r\n\ @version\ 1.0\ (Jan\ 2003)\ DB\ edited\ (2019)\ +\ 05/04/2025\r\n
comment1.params=
comment1.target=GameEngine()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ GameEngine\r\n
comment10.params=pNameFile
comment10.target=void\ test(Command)
comment10.text=\r\n\ Method\ to\ test\ commands\ from\ a\ text\ file.\r\n\r\n\ @param\ pNameFile\ The\ command\ containing\ the\ file\ name\ to\ test\r\n
comment11.params=pCommand\ pMessage
comment11.target=boolean\ checkSecondWord(Command,\ java.lang.String)
comment11.text=\r\n\ Checks\ if\ the\ command\ has\ a\ second\ word;\ prints\ message\ if\ missing.\r\n\r\n\ @param\ pCommand\ The\ command\ to\ check\r\n\ @param\ pMessage\ The\ message\ to\ print\ if\ second\ word\ is\ missing\r\n\ @return\ true\ if\ command\ has\ a\ second\ word,\ false\ otherwise\r\n
comment12.params=
comment12.target=void\ checkVictory()
comment12.text=\r\n\ Checks\ if\ the\ player\ has\ won\ the\ game\ by\ reaching\ the\ outside\ room\ with\ the\ key.\r\n\ If\ time\ runs\ out,\ restarts\ the\ game.\r\n
comment13.params=
comment13.target=int\ getTimeLeft()
comment13.text=\r\n\ Returns\ the\ amount\ of\ time\ left\ in\ seconds.\r\n\r\n\ @return\ the\ remaining\ time\ left\r\n
comment14.params=
comment14.target=void\ updateTimerDisplay()
comment14.text=\r\n\ Updates\ the\ timer\ display\ on\ the\ GUI.\r\n
comment15.params=
comment15.target=void\ startTimer()
comment15.text=\r\n\ Starts\ the\ countdown\ timer\ for\ the\ game.\r\n\ Timer\ ticks\ every\ second,\ reducing\ time\ left\ and\ ending\ the\ game\ when\ time\ runs\ out.\r\n
comment16.params=e
comment16.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment17.params=
comment17.target=void\ endTimeLimit()
comment17.text=\r\n\ Called\ when\ time\ runs\ out\ to\ end\ the\ game\ and\ notify\ the\ player.\r\n
comment18.params=
comment18.target=void\ endGame()
comment18.text=\r\n\ Ends\ the\ game\r\n
comment19.params=
comment19.target=void\ restartGame()
comment19.text=\r\n\ Restarts\ the\ game.\r\n
comment2.params=pUserInterface\ vName
comment2.target=void\ setGUI(UserInterface,\ java.lang.String)
comment2.text=\r\n\ Sets\ the\ GUI\ for\ the\ game\ and\ prints\ the\ welcome\ message.\r\n\ @param\ pUserInterface\ The\ user\ interface\ to\ be\ set.\r\n
comment20.params=
comment20.target=Room\ getCurrentRoom()
comment20.text=\r\n\ Returns\ the\ player's\ current\ room.\r\n\r\n\ @return\ the\ current\ Room\ object\ of\ the\ player\r\n
comment21.params=
comment21.target=void\ trapped()
comment21.text=\r\n\ Resets\ the\ player\ location\ to\ a\ free\ room\ if\ trapped\ by\ alien\ virus.\r\n
comment22.params=
comment22.target=Room\ getTrap()
comment22.text=\r\n\ Returns\ the\ trap\ room\ object.\r\n\r\n\ @return\ the\ trap\ Room\ object\r\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Prints\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment4.params=
comment4.target=void\ createRooms()
comment4.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment5.params=pCommand
comment5.target=void\ interpretCommand(Command)
comment5.text=\r\n\ Interprets\ and\ executes\ the\ given\ command.\r\n\ @param\ pCommand\ The\ command\ string\ entered\ by\ the\ player.\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\r\n\ command\ words.\r\n
comment7.params=pCommand
comment7.target=void\ goRoom(Command)
comment7.text=\r\n\ Moves\ the\ player\ to\ a\ new\ room\ if\ the\ direction\ is\ valid.\r\n\ @param\ pCommand\ The\ command\ containing\ the\ direction.\r\n
comment8.params=pCommand
comment8.target=void\ back(Command)
comment8.text=\r\n\ Moves\ the\ player\ back\ to\ the\ previous\ room\ if\ possible.\r\n\ @param\ pCommand\ The\ command\ object\ containing\ the\ back\ action.\r\n
comment9.params=
comment9.target=void\ printLocationInfo()
comment9.text=\r\n\ Prints\ the\ description\ of\ the\ current\ room\ and\ its\ associated\ image.\r\n
numComments=23
